description: |
  Start an emulator as a background process.
  The AVD used should already be created. (See "create_avd" command for how
  one could be created)
parameters:
  avd_name:
    description: |
      The name of the existing AVD to use for the emulator
    type: string
  gpu:
    description: |
      The value to use for the "-gpu" flag.
      If set to "", the emulator will be run without the -gpu flag.
    type: string
    default: "swiftshader_indirect"
  camera_front:
    description: |
      The value to use for the "-camera_front" flag.
      If set to "", the emulator will be run without the -camera_front flag.
    type: string
    default: ""
  camera_back:
    description: |
      The value to use for the "-camera_back" flag.
      If set to "", the emulator will be run without the -camera_back flag.
    type: string
    default: ""
  memory:
    description: |
      The value to use for the "-memory" flag.
      If set to -1, the emulator will be run without the -memory flag.
    type: integer
    default: -1
  no_window:
    description: |
      Whether to run the emulator with the -no_window flag
    type: boolean
    default: true
  no_audio:
    description: |
      Whether to run the emulator with the -noaudio flag
    type: boolean
    default: true
  no_boot_anim:
    description: |
      Whether to run the emulator with the -no_boot_anim flag
    type: boolean
    default: true
  no_snapshot:
    description: |
      Whether to run the emulator with the -no_snapshot flag
    type: boolean
    default: true
  delay_adb:
    description: |
      Whether to run the emulator with the -delay_adb flag
    type: boolean
    default: false
  verbose:
    description: |
      Whether to run the emulator with the -verbose flag
    type: boolean
    default: true
  additional_args:
    description: |
      Additional args to be passed directly to the emulator command
    type: string
    default: ""
  override_args:
    description: |
      If this is set to a non-blank value, the emulator command will be
      run with the -avd flag and the value of "override_args" (i.e. none of the defaults
      provided by the orb command will be used)
    type: string
    default: ""
  pre_emulator_wait_steps:
    description: |
      Steps to execute while before beginning to wait for the emulator to start up
    type: steps
    default: []
  post_emulator_launch_assemble_command:
    description: |
      If this is set to a non-blank value, the configured command will be run
      after the emulator has been launched, and before commencing the
      wait for the emulator to finish starting up.
    type: string
    default: "./gradlew assembleDebugAndroidTest"
  restore_gradle_cache-post-emulator-launch:
    description: |
      Whether to restore the gradle cache after the emulator has been launched,
      and before commencing the wait for the emulator to finish starting up.
    type: boolean
    default: true
  restore_gradle_cache_prefix:
    description: |
      Cache prefix used if the "restore_gradle_cache-post-emulator-launch" parameter
      is set to true.
    type: string
    default: "v1"
  restore_gradle_cache-find_args:
    description: |
      Use this to customize how the find command is used to look for relevant
      file changes.
    type: string
    default:  ". -name \"build.gradle*\" -o -name \"settings.gradle*\""
  post_emulator_wait_steps:
    description: |
      Steps to execute after waiting for the emulator to start up
    type: steps
    default: []
  wait_for_emulator:
    description: |
      Whether to wait for the emulator to start up
    type: boolean
    default: true
  run_logcat:
    description: |
      Whether to run with logcat in the background, after the emulator starts up
    type: boolean
    default: false
  disable_animations:
    description: |
      Whether to disable animations that may interfere with tests, after the emulator starts up
    type: boolean
    default: true
steps:
  - run:
      environment:
        PARAM_OVERRIDE_ARGS: << parameters.override_args >>
        PARAM_AVD_NAME: << parameters.avd_name >>
        PARAM_NO_WINDOW: << parameters.no_window >>
        PARAM_NO_AUDIO: << parameters.no_audio >>
        PARAM_NO_BOOT_ANIM: << parameters.no_boot_anim >>
        PARAM_VERBOSE: << parameters.verbose >>
        PARAM_NO_SNAPSHOT: << parameters.no_snapshot >>
        PARAM_DELAY_ABD: << parameters.delay_adb >>
        PARAM_MEMORY: << parameters.memory >>
        PARAM_GPU: << parameters.gpu >>
        PARAM_CAMERA_FRONT: << parameters.camera_front >>
        PARAM_CAMERA_BACK: << parameters.camera_back >>
        PARAM_ADDITIONAL_ARGS: << parameters.additional_args >>
      name: Start emulator
      command: <<include(scripts/start_emulator.sh)>>
      background: true
  - when:
      condition:
        and:
          - << parameters.restore_gradle_cache-post-emulator-launch >>
          - equal: [ true, << parameters.wait_for_emulator >> ]
      steps:
        - restore_gradle_cache:
            cache_prefix: << parameters.restore_gradle_cache_prefix >>
            find_args: << parameters.restore_gradle_cache-find_args >>
  - when:
      condition:
        and:
          - << parameters.post_emulator_launch_assemble_command >>
          - equal: [ true, << parameters.wait_for_emulator >> ]
      steps:
        - run:
            name: "Run: << parameters.post_emulator_launch_assemble_command >>"
            command: |
              # This is meant to do something useful in parallel with the emulator
              # starting up, like assembling the app, which is required for UI tests
              << parameters.post_emulator_launch_assemble_command >>
  - when:
      condition: << parameters.wait_for_emulator >>
      steps:
        - << parameters.pre_emulator_wait_steps >>
  - when:
      condition: << parameters.wait_for_emulator >>
      steps:
        - wait_for_emulator
        - when:
            condition: << parameters.run_logcat >>
            steps:
              - run:
                  name: Logcat
                  command: |
                    adb logcat
                  background: true
        - when:
            condition: << parameters.disable_animations >>
            steps:
                - disable_animations
        - << parameters.post_emulator_wait_steps >>
