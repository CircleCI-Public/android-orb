description: |
  Creates an AVD, starts an emulator and runs tests.
  This is a wrapper command that wraps the
  create_avd, start_emulator and run_tests commands.
parameters:
  avd_name:
    description: |
      The name of the AVD to create
    type: string
    default: test
  system_image:
    description: |
      Name of system image e.g. "system_images;android-29;default;x86".
      It should match the name seen in the "sdkmanager --list" output.
    type: string
    default: system_images;android-29;default;x86
  install-system_image:
    description: |
      Whether to first install the system image via sdkmanager
    type: boolean
    default: true
  additional_avd_args:
    description: |
      Additional args to be passed directly to the avd creation command
    type: string
    default: ""
  gpu:
    description: |
      The value to use for the "-gpu" flag.
      If set to "", the emulator will be run without the -gpu flag.
    type: string
    default: "swiftshader_indirect"
  camera_front:
    description: |
      The value to use for the "-camera_front" flag.
      If set to "", the emulator will be run without the -camera_front flag.
    type: string
    default: ""
  camera_back:
    description: |
      The value to use for the "-camera_back" flag.
      If set to "", the emulator will be run without the -camera_back flag.
    type: string
    default: ""
  memory:
    description: |
      The value to use for the "-memory" flag.
      If set to -1, the emulator will be run without the -memory flag.
    type: integer
    default: -1
  no_window:
    description: |
      Whether to run the emulator with the -no_window flag
    type: boolean
    default: true
  no_audio:
    description: |
      Whether to run the emulator with the -noaudio flag
    type: boolean
    default: true
  no_boot_anim:
    description: |
      Whether to run the emulator with the -no_boot_anim flag
    type: boolean
    default: true
  no_snapshot:
    description: |
      Whether to run the emulator with the -no_snapshot flag
    type: boolean
    default: true
  delay_adb:
    description: |
      Whether to run the emulator with the -delay_adb flag
    type: boolean
    default: false
  verbose:
    description: |
      Whether to run the emulator with the -verbose flag
    type: boolean
    default: true
  additional_emulator_args:
    description: |
      Additional args to be passed directly to the emulator command
    type: string
    default: ""
  override_emulator_args:
    description: |
      If this is set to a non-blank value, the emulator command will be
      run with the -avd flag and the value of "override_args" (i.e. none of the defaults
      provided by the orb command will be used)
    type: string
    default: ""
  pre_emulator_wait_steps:
    description: |
      Steps to execute while before beginning to wait for the emulator to start up
    type: steps
    default: []
  post_emulator_launch_assemble_command:
    description: |
      If this is set to a non-blank value, the configured command will be run
      after the emulator has been launched, and before commencing the
      wait for the emulator to finish starting up.
    type: string
    default: "./gradlew assembleDebugAndroidTest"
  restore_gradle_cache-post-emulator-launch:
    description: |
      Whether to restore the gradle cache after the emulator has been launched,
      and before commencing the wait for the emulator to finish starting up.
    type: boolean
    default: true
  restore_gradle_cache_prefix:
    description: |
      Cache prefix used if the "restore_gradle_cache-post-emulator-launch" parameter
      is set to true.
    type: string
    default: "v1"
  restore_gradle_cache-find_args:
    description: |
      Use this to customize how the find command is used to look for relevant
      file changes.
    type: string
    default: ". -name \"build.gradle*\" -o -name \"settings.gradle*\""
  save_gradle_cache:
    description: |
      Whether to write to the gradle cache after the tests have run
    type: boolean
    default: true
  post_emulator_wait_steps:
    description: |
      Steps to execute after waiting for the emulator to start up
    type: steps
    default: []
  wait_for_emulator:
    description: |
      Whether to wait for the emulator to start up
    type: boolean
    default: true
  run_logcat:
    description: |
      Whether to run with logcat in the background, after the emulator starts up
    type: boolean
    default: false
  disable_animations:
    description: |
      Whether to disable animations that may interfere with tests, after the emulator starts up
    type: boolean
    default: true
  pre-run_tests-steps:
    description: |
      Steps to run before the tests
    type: steps
    default: []
  post-run_tests-steps:
    description: |
      Steps to run after the tests
    type: steps
    default: []
  pre_test_command:
    description: Command to run prior to runnning the test command
    type: string
    default: " "
  test_command:
    description: Command to run in order to run the tests
    type: string
    default: "./gradlew connectedDebugAndroidTest"
  run_tests-working_directory:
    description: Working directory to run the tests in
    type: string
    default: "."
  max_tries:
    description: Max number of tries. To disable retries, set this to 1.
    type: integer
    default: 2
  retry_interval:
    description: Duration in seconds to wait before the next try
    type: integer
    default: 5
  no_output_timeout:
    description: |
      Use this to configure the no_output_timeout value of the test run
    type: string
    default: 10m
  kill_emulators:
    description: |
      Whether to kill the emulators after the tests complete
    type: boolean
    default: true
  pull_data:
    description: |
      Whether to pull data after running tests
    type: boolean
    default: false
  pull_data-path:
    description: |
      Emulator directory to pull data from
    type: string
    default: data
  pull_data-target:
    description: |
      Location to save pulled data
    type: string
    default: "."

steps:
  - create_avd:
      avd_name: << parameters.avd_name >>
      system_image: <<parameters.system_image>>
      install: << parameters.install-system_image >>
      additional_args: << parameters.additional_avd_args >>
  - start_emulator:
      avd_name: << parameters.avd_name >>
      gpu: << parameters.gpu >>
      camera_front: << parameters.camera_front >>
      camera_back: << parameters.camera_back >>
      memory: << parameters.memory >>
      no_window: << parameters.no_window >>
      no_audio: << parameters.no_audio >>
      no_boot_anim: << parameters.no_boot_anim >>
      no_snapshot: << parameters.no_snapshot >>
      delay_adb: << parameters.delay_adb >>
      verbose: << parameters.verbose >>
      additional_args: << parameters.additional_emulator_args >>
      override_args: << parameters.override_emulator_args >>
      wait_for_emulator: << parameters.wait_for_emulator >>
      pre_emulator_wait_steps: << parameters.pre_emulator_wait_steps >>
      post_emulator_launch_assemble_command: << parameters.post_emulator_launch_assemble_command >>
      restore_gradle_cache-post-emulator-launch: << parameters.restore_gradle_cache-post-emulator-launch >>
      restore_gradle_cache_prefix: << parameters.restore_gradle_cache_prefix >>
      restore_gradle_cache-find_args: << parameters.restore_gradle_cache-find_args >>
      post_emulator_wait_steps: << parameters.post_emulator_wait_steps >>
      run_logcat: << parameters.run_logcat >>
      disable_animations: << parameters.disable_animations >>
  - << parameters.pre-run_tests-steps >>
  - run_tests:
      working_directory: << parameters.run_tests-working_directory >>
      pre_test_command: << parameters.pre_test_command >>
      test_command: << parameters.test_command >>
      max_tries: << parameters.max_tries >>
      retry_interval: << parameters.retry_interval >>
      no_output_timeout: << parameters.no_output_timeout >>
      pull_data: << parameters.pull_data >>
      pull_data-path: << parameters.pull_data-path >>
      pull_data-target: << parameters.pull_data-target >>
  - << parameters.post-run_tests-steps >>
  - when:
      condition: << parameters.save_gradle_cache >>
      steps:
        - save_gradle_cache:
            cache_prefix: << parameters.restore_gradle_cache_prefix >>
  - when:
      condition: << parameters.kill_emulators >>
      steps:
        - kill_emulators
