description: Starts an emulator as a background process
parameters:
  avd-name:
    type: string
    description: |
      The name of the AVD to use for the emulator
  gpu:
    type: string
    default: "swiftshader_indirect"
    description: |
      The value to use for the "-gpu" flag.
      If set to "", the emulator will be run without the -gpu flag.
  camera-front:
    type: string
    default: "none"
    description: |
      The value to use for the "-camera-front" flag.
      If set to "", the emulator will be run without the -camera-front flag.
  camera-back:
    type: string
    default: "none"
    description: |
      The value to use for the "-camera-back" flag.
      If set to "", the emulator will be run without the -camera-back flag.
  memory:
    type: integer
    default: -1
    description: |
      The value to use for the "-memory" flag.
      If set to -1, the emulator will be run without the -memory flag.
  no-window:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -no-window flag
  no-audio:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -noaudio flag
  no-boot-anim:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -no-boot-anim flag
  no-snapshot:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -no-snapshot flag
  delay-adb:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -delay-adb flag
  verbose:
    type: boolean
    default: true
    description: |
      Whether to run the emulator with the -verbose flag
  additional-args:
    type: string
    default: ""
    description: |
      Additional args to be passed directly to the emulator command
  override-args:
    type: string
    default: ""
    description: |
      If this is set to a non-blank value, the emulator command will be
      run with the -avd flag and the value of "override-args" (i.e. none of the defaults
      provided by the orb command will be used)
  pre-emulator-wait-steps:
    description: |
      Steps to execute while before beginning to wait for the emulator to start up
    type: steps
    default: []
  post-emulator-launch-assemble-command:
    description: |
      If this is set to a non-blank value, the configured command will be run
      after the emulator has been launched, and before commencing the
      wait for the emulator to finish starting up.
    type: string
    default: "./gradlew assembleDebugAndroidTest"
  restore-gradle-cache-post-emulator-launch:
    description: |
      Whether to restore the gradle cache after the emulator has been launched,
      and before commencing the wait for the emulator to finish starting up.
    type: boolean
    default: true
  restore-gradle-cache-prefix:
    description: |
      Cache prefix used if the "restore-gradle-cache-post-emulator-launch" parameter
      is set to true.
    type: string
    default: "v1"
  post-emulator-wait-steps:
    description: |
      Steps to execute after waiting for the emulator to start up
    type: steps
    default: []
  wait-for-emulator:
    type: boolean
    default: true
    description: |
      Wait for the emulator to start up
  run-logcat:
    type: boolean
    default: false
    description: |
      Run with logcat in the background, after the emulator starts up
  disable-animations:
    type: boolean
    default: true
    description: |
      Disable animations that may interfere with tests, after the emulator starts up
steps:
  - run:
      name: Start emulator
      command: |
        if [ -n "<< parameters.override-args >>" ]; then
          echo "override-args parameter was supplied; orb defaults will be overridden"
          emulator -avd <<parameters.avd-name>> << parameters.override-args >>
        else
          if [ "<< parameters.no-window >>" == "true" ]; then
            set -- "$@" -no-window
          fi
          if [ "<< parameters.no-audio >>" == "true" ]; then
            set -- "$@" -no-audio
          fi
          if [ "<< parameters.no-boot-anim >>" == "true" ]; then
            set -- "$@" -no-boot-anim
          fi
          if [ "<< parameters.verbose >>" == "true" ]; then
            set -- "$@" -verbose
          fi
          if [ "<< parameters.no-snapshot >>" == "true" ]; then
            set -- "$@" -no-snapshot
          fi
          if [ "<< parameters.delay-adb >>" == "true" ]; then
            set -- "$@" -delay-adb
          fi
          if [ "<< parameters.memory >>" != "-1" ]; then
            set -- "$@" -memory << parameters.memory >>
          fi
          if [ -n "<< parameters.gpu >>" ]; then
            set -- "$@" -gpu "<< parameters.gpu >>"
          fi
          if [ -n "<< parameters.camera-front >>" ]; then
            set -- "$@" -camera-front "<< parameters.camera-front >>"
          fi
          if [ -n "<< parameters.camera-back >>" ]; then
            set -- "$@" -camera-back "<< parameters.camera-back >>"
          fi
          echo "Starting emulator with arguments $@ << parameters.additional-args >>"
          emulator -avd <<parameters.avd-name>> "$@" << parameters.additional-args >>
        fi
      background: true
  - when:
      condition:
        and:
          - << parameters.restore-gradle-cache-post-emulator-launch >> ]
          - equal: [ true, << parameters.wait-for-emulator >> ]
      steps:
        - restore-gradle-cache:
            cache-prefix: << parameters.restore-gradle-cache-prefix >>
  - when:
      condition:
        and:
          - << parameters.post-emulator-launch-assemble-command >>
          - equal: [ true, << parameters.wait-for-emulator >> ]
      steps:
        - run:
            name: "Assemble app: << parameters.post-emulator-launch-assemble-command >>"
            command: |
              # This is meant to do something useful in parallel with the emulator
              # starting up, like assembling the app, which is required for UI tests
              << parameters.post-emulator-launch-assemble-command >>
  - when:
      condition: << parameters.wait-for-emulator >>
      steps:
        - << parameters.pre-emulator-wait-steps >>
  - when:
      condition: << parameters.wait-for-emulator >>
      steps:
        - wait-for-emulator
        - when:
            condition: << parameters.run-logcat >>
            steps:
              - run:
                  name: Logcat
                  command: |
                    adb logcat
                  background: true
        - when:
            condition: << parameters.disable-animations >>
            steps:
                - disable-animations
  - << parameters.post-emulator-wait-steps >>
